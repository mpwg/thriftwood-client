//
// NamingConfigResource.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct NamingConfigResource: Sendable, Codable, ParameterConvertible, Hashable {

    public var id: Int?
    public var renameMovies: Bool?
    public var replaceIllegalCharacters: Bool?
    public var colonReplacementFormat: ColonReplacementFormat?
    public var standardMovieFormat: String?
    public var movieFolderFormat: String?

    public init(id: Int? = nil, renameMovies: Bool? = nil, replaceIllegalCharacters: Bool? = nil, colonReplacementFormat: ColonReplacementFormat? = nil, standardMovieFormat: String? = nil, movieFolderFormat: String? = nil) {
        self.id = id
        self.renameMovies = renameMovies
        self.replaceIllegalCharacters = replaceIllegalCharacters
        self.colonReplacementFormat = colonReplacementFormat
        self.standardMovieFormat = standardMovieFormat
        self.movieFolderFormat = movieFolderFormat
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case renameMovies
        case replaceIllegalCharacters
        case colonReplacementFormat
        case standardMovieFormat
        case movieFolderFormat
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(renameMovies, forKey: .renameMovies)
        try container.encodeIfPresent(replaceIllegalCharacters, forKey: .replaceIllegalCharacters)
        try container.encodeIfPresent(colonReplacementFormat, forKey: .colonReplacementFormat)
        try container.encodeIfPresent(standardMovieFormat, forKey: .standardMovieFormat)
        try container.encodeIfPresent(movieFolderFormat, forKey: .movieFolderFormat)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension NamingConfigResource: Identifiable {}
