//
// IndexerBulkResource.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct IndexerBulkResource: Sendable, Codable, ParameterConvertible, Hashable {

    public var ids: [Int]?
    public var tags: [Int]?
    public var applyTags: ApplyTags?
    public var enableRss: Bool?
    public var enableAutomaticSearch: Bool?
    public var enableInteractiveSearch: Bool?
    public var priority: Int?

    public init(ids: [Int]? = nil, tags: [Int]? = nil, applyTags: ApplyTags? = nil, enableRss: Bool? = nil, enableAutomaticSearch: Bool? = nil, enableInteractiveSearch: Bool? = nil, priority: Int? = nil) {
        self.ids = ids
        self.tags = tags
        self.applyTags = applyTags
        self.enableRss = enableRss
        self.enableAutomaticSearch = enableAutomaticSearch
        self.enableInteractiveSearch = enableInteractiveSearch
        self.priority = priority
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case ids
        case tags
        case applyTags
        case enableRss
        case enableAutomaticSearch
        case enableInteractiveSearch
        case priority
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(ids, forKey: .ids)
        try container.encodeIfPresent(tags, forKey: .tags)
        try container.encodeIfPresent(applyTags, forKey: .applyTags)
        try container.encodeIfPresent(enableRss, forKey: .enableRss)
        try container.encodeIfPresent(enableAutomaticSearch, forKey: .enableAutomaticSearch)
        try container.encodeIfPresent(enableInteractiveSearch, forKey: .enableInteractiveSearch)
        try container.encodeIfPresent(priority, forKey: .priority)
    }
}

