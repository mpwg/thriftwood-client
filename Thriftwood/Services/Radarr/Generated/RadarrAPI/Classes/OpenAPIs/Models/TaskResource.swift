//
// TaskResource.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct TaskResource: Sendable, Codable, ParameterConvertible, Hashable {

    public var id: Int?
    public var name: String?
    public var taskName: String?
    public var interval: Int?
    public var lastExecution: Date?
    public var lastStartTime: Date?
    public var nextExecution: Date?
    public var lastDuration: String?

    public init(id: Int? = nil, name: String? = nil, taskName: String? = nil, interval: Int? = nil, lastExecution: Date? = nil, lastStartTime: Date? = nil, nextExecution: Date? = nil, lastDuration: String? = nil) {
        self.id = id
        self.name = name
        self.taskName = taskName
        self.interval = interval
        self.lastExecution = lastExecution
        self.lastStartTime = lastStartTime
        self.nextExecution = nextExecution
        self.lastDuration = lastDuration
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case taskName
        case interval
        case lastExecution
        case lastStartTime
        case nextExecution
        case lastDuration
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(taskName, forKey: .taskName)
        try container.encodeIfPresent(interval, forKey: .interval)
        try container.encodeIfPresent(lastExecution, forKey: .lastExecution)
        try container.encodeIfPresent(lastStartTime, forKey: .lastStartTime)
        try container.encodeIfPresent(nextExecution, forKey: .nextExecution)
        try container.encodeIfPresent(lastDuration, forKey: .lastDuration)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension TaskResource: Identifiable {}
