//
// RadarrDelayProfileAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class RadarrDelayProfileAPI {

    /**

     - parameter apiConfiguration: The configuration for the http request.
     - returns: [DelayProfileResource]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiV3DelayprofileGet(apiConfiguration: RadarrAPIAPIConfiguration = RadarrAPIAPIConfiguration.shared) async throws(ErrorResponse) -> [DelayProfileResource] {
        return try await apiV3DelayprofileGetWithRequestBuilder(apiConfiguration: apiConfiguration).execute().body
    }

    /**
     - GET /api/v3/delayprofile
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<[DelayProfileResource]> 
     */
    open class func apiV3DelayprofileGetWithRequestBuilder(apiConfiguration: RadarrAPIAPIConfiguration = RadarrAPIAPIConfiguration.shared) -> RequestBuilder<[DelayProfileResource]> {
        let localVariablePath = "/api/v3/delayprofile"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[DelayProfileResource]>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**

     - parameter id: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiV3DelayprofileIdDelete(id: Int, apiConfiguration: RadarrAPIAPIConfiguration = RadarrAPIAPIConfiguration.shared) async throws(ErrorResponse) {
        return try await apiV3DelayprofileIdDeleteWithRequestBuilder(id: id, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     - DELETE /api/v3/delayprofile/{id}
     - parameter id: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<Void> 
     */
    open class func apiV3DelayprofileIdDeleteWithRequestBuilder(id: Int, apiConfiguration: RadarrAPIAPIConfiguration = RadarrAPIAPIConfiguration.shared) -> RequestBuilder<Void> {
        var localVariablePath = "/api/v3/delayprofile/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = apiConfiguration.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**

     - parameter id: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: DelayProfileResource
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiV3DelayprofileIdGet(id: Int, apiConfiguration: RadarrAPIAPIConfiguration = RadarrAPIAPIConfiguration.shared) async throws(ErrorResponse) -> DelayProfileResource {
        return try await apiV3DelayprofileIdGetWithRequestBuilder(id: id, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     - GET /api/v3/delayprofile/{id}
     - parameter id: (path)  
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<DelayProfileResource> 
     */
    open class func apiV3DelayprofileIdGetWithRequestBuilder(id: Int, apiConfiguration: RadarrAPIAPIConfiguration = RadarrAPIAPIConfiguration.shared) -> RequestBuilder<DelayProfileResource> {
        var localVariablePath = "/api/v3/delayprofile/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<DelayProfileResource>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**

     - parameter id: (path)  
     - parameter delayProfileResource: (body)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: DelayProfileResource
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiV3DelayprofileIdPut(id: String, delayProfileResource: DelayProfileResource? = nil, apiConfiguration: RadarrAPIAPIConfiguration = RadarrAPIAPIConfiguration.shared) async throws(ErrorResponse) -> DelayProfileResource {
        return try await apiV3DelayprofileIdPutWithRequestBuilder(id: id, delayProfileResource: delayProfileResource, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     - PUT /api/v3/delayprofile/{id}
     - parameter id: (path)  
     - parameter delayProfileResource: (body)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<DelayProfileResource> 
     */
    open class func apiV3DelayprofileIdPutWithRequestBuilder(id: String, delayProfileResource: DelayProfileResource? = nil, apiConfiguration: RadarrAPIAPIConfiguration = RadarrAPIAPIConfiguration.shared) -> RequestBuilder<DelayProfileResource> {
        var localVariablePath = "/api/v3/delayprofile/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: delayProfileResource, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<DelayProfileResource>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**

     - parameter delayProfileResource: (body)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: DelayProfileResource
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiV3DelayprofilePost(delayProfileResource: DelayProfileResource? = nil, apiConfiguration: RadarrAPIAPIConfiguration = RadarrAPIAPIConfiguration.shared) async throws(ErrorResponse) -> DelayProfileResource {
        return try await apiV3DelayprofilePostWithRequestBuilder(delayProfileResource: delayProfileResource, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     - POST /api/v3/delayprofile
     - parameter delayProfileResource: (body)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<DelayProfileResource> 
     */
    open class func apiV3DelayprofilePostWithRequestBuilder(delayProfileResource: DelayProfileResource? = nil, apiConfiguration: RadarrAPIAPIConfiguration = RadarrAPIAPIConfiguration.shared) -> RequestBuilder<DelayProfileResource> {
        let localVariablePath = "/api/v3/delayprofile"
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: delayProfileResource, codableHelper: apiConfiguration.codableHelper)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<DelayProfileResource>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }

    /**

     - parameter id: (path)  
     - parameter after: (query)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: [DelayProfileResource]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func apiV3DelayprofileReorderIdPut(id: Int, after: Int? = nil, apiConfiguration: RadarrAPIAPIConfiguration = RadarrAPIAPIConfiguration.shared) async throws(ErrorResponse) -> [DelayProfileResource] {
        return try await apiV3DelayprofileReorderIdPutWithRequestBuilder(id: id, after: after, apiConfiguration: apiConfiguration).execute().body
    }

    /**
     - PUT /api/v3/delayprofile/reorder/{id}
     - parameter id: (path)  
     - parameter after: (query)  (optional)
     - parameter apiConfiguration: The configuration for the http request.
     - returns: RequestBuilder<[DelayProfileResource]> 
     */
    open class func apiV3DelayprofileReorderIdPutWithRequestBuilder(id: Int, after: Int? = nil, apiConfiguration: RadarrAPIAPIConfiguration = RadarrAPIAPIConfiguration.shared) -> RequestBuilder<[DelayProfileResource]> {
        var localVariablePath = "/api/v3/delayprofile/reorder/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = apiConfiguration.basePath + localVariablePath
        let localVariableParameters: [String: any Sendable]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "after": (wrappedValue: after?.asParameter(codableHelper: apiConfiguration.codableHelper), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: (any Sendable)?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[DelayProfileResource]>.Type = apiConfiguration.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false, apiConfiguration: apiConfiguration)
    }
}
