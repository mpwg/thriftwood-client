//
// ManualImportReprocessResource.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct ManualImportReprocessResource: Sendable, Codable, ParameterConvertible, Hashable {

    public var id: Int?
    public var path: String?
    public var movieId: Int?
    public var movie: MovieResource?
    public var quality: QualityModel?
    public var languages: [Language]?
    public var releaseGroup: String?
    public var downloadId: String?
    public var customFormats: [CustomFormatResource]?
    public var customFormatScore: Int?
    public var indexerFlags: Int?
    public var rejections: [ImportRejectionResource]?

    public init(id: Int? = nil, path: String? = nil, movieId: Int? = nil, movie: MovieResource? = nil, quality: QualityModel? = nil, languages: [Language]? = nil, releaseGroup: String? = nil, downloadId: String? = nil, customFormats: [CustomFormatResource]? = nil, customFormatScore: Int? = nil, indexerFlags: Int? = nil, rejections: [ImportRejectionResource]? = nil) {
        self.id = id
        self.path = path
        self.movieId = movieId
        self.movie = movie
        self.quality = quality
        self.languages = languages
        self.releaseGroup = releaseGroup
        self.downloadId = downloadId
        self.customFormats = customFormats
        self.customFormatScore = customFormatScore
        self.indexerFlags = indexerFlags
        self.rejections = rejections
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case path
        case movieId
        case movie
        case quality
        case languages
        case releaseGroup
        case downloadId
        case customFormats
        case customFormatScore
        case indexerFlags
        case rejections
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(path, forKey: .path)
        try container.encodeIfPresent(movieId, forKey: .movieId)
        try container.encodeIfPresent(movie, forKey: .movie)
        try container.encodeIfPresent(quality, forKey: .quality)
        try container.encodeIfPresent(languages, forKey: .languages)
        try container.encodeIfPresent(releaseGroup, forKey: .releaseGroup)
        try container.encodeIfPresent(downloadId, forKey: .downloadId)
        try container.encodeIfPresent(customFormats, forKey: .customFormats)
        try container.encodeIfPresent(customFormatScore, forKey: .customFormatScore)
        try container.encodeIfPresent(indexerFlags, forKey: .indexerFlags)
        try container.encodeIfPresent(rejections, forKey: .rejections)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ManualImportReprocessResource: Identifiable {}
