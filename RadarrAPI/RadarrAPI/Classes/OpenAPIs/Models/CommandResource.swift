//
// CommandResource.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct CommandResource: Sendable, Codable, ParameterConvertible, Hashable {

    public var id: Int?
    public var name: String?
    public var commandName: String?
    public var message: String?
    public var body: Command?
    public var priority: CommandPriority?
    public var status: CommandStatus?
    public var result: CommandResult?
    public var queued: Date?
    public var started: Date?
    public var ended: Date?
    public var duration: String?
    public var exception: String?
    public var trigger: CommandTrigger?
    public var clientUserAgent: String?
    public var stateChangeTime: Date?
    public var sendUpdatesToClient: Bool?
    public var updateScheduledTask: Bool?
    public var lastExecutionTime: Date?

    public init(id: Int? = nil, name: String? = nil, commandName: String? = nil, message: String? = nil, body: Command? = nil, priority: CommandPriority? = nil, status: CommandStatus? = nil, result: CommandResult? = nil, queued: Date? = nil, started: Date? = nil, ended: Date? = nil, duration: String? = nil, exception: String? = nil, trigger: CommandTrigger? = nil, clientUserAgent: String? = nil, stateChangeTime: Date? = nil, sendUpdatesToClient: Bool? = nil, updateScheduledTask: Bool? = nil, lastExecutionTime: Date? = nil) {
        self.id = id
        self.name = name
        self.commandName = commandName
        self.message = message
        self.body = body
        self.priority = priority
        self.status = status
        self.result = result
        self.queued = queued
        self.started = started
        self.ended = ended
        self.duration = duration
        self.exception = exception
        self.trigger = trigger
        self.clientUserAgent = clientUserAgent
        self.stateChangeTime = stateChangeTime
        self.sendUpdatesToClient = sendUpdatesToClient
        self.updateScheduledTask = updateScheduledTask
        self.lastExecutionTime = lastExecutionTime
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case commandName
        case message
        case body
        case priority
        case status
        case result
        case queued
        case started
        case ended
        case duration
        case exception
        case trigger
        case clientUserAgent
        case stateChangeTime
        case sendUpdatesToClient
        case updateScheduledTask
        case lastExecutionTime
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(commandName, forKey: .commandName)
        try container.encodeIfPresent(message, forKey: .message)
        try container.encodeIfPresent(body, forKey: .body)
        try container.encodeIfPresent(priority, forKey: .priority)
        try container.encodeIfPresent(status, forKey: .status)
        try container.encodeIfPresent(result, forKey: .result)
        try container.encodeIfPresent(queued, forKey: .queued)
        try container.encodeIfPresent(started, forKey: .started)
        try container.encodeIfPresent(ended, forKey: .ended)
        try container.encodeIfPresent(duration, forKey: .duration)
        try container.encodeIfPresent(exception, forKey: .exception)
        try container.encodeIfPresent(trigger, forKey: .trigger)
        try container.encodeIfPresent(clientUserAgent, forKey: .clientUserAgent)
        try container.encodeIfPresent(stateChangeTime, forKey: .stateChangeTime)
        try container.encodeIfPresent(sendUpdatesToClient, forKey: .sendUpdatesToClient)
        try container.encodeIfPresent(updateScheduledTask, forKey: .updateScheduledTask)
        try container.encodeIfPresent(lastExecutionTime, forKey: .lastExecutionTime)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension CommandResource: Identifiable {}
