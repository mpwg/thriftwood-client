//
// UpdateResource.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct UpdateResource: Sendable, Codable, ParameterConvertible, Hashable {

    public var id: Int?
    public var version: String?
    public var branch: String?
    public var releaseDate: Date?
    public var fileName: String?
    public var url: String?
    public var installed: Bool?
    public var installedOn: Date?
    public var installable: Bool?
    public var latest: Bool?
    public var changes: UpdateChanges?
    public var hash: String?

    public init(id: Int? = nil, version: String? = nil, branch: String? = nil, releaseDate: Date? = nil, fileName: String? = nil, url: String? = nil, installed: Bool? = nil, installedOn: Date? = nil, installable: Bool? = nil, latest: Bool? = nil, changes: UpdateChanges? = nil, hash: String? = nil) {
        self.id = id
        self.version = version
        self.branch = branch
        self.releaseDate = releaseDate
        self.fileName = fileName
        self.url = url
        self.installed = installed
        self.installedOn = installedOn
        self.installable = installable
        self.latest = latest
        self.changes = changes
        self.hash = hash
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case version
        case branch
        case releaseDate
        case fileName
        case url
        case installed
        case installedOn
        case installable
        case latest
        case changes
        case hash
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(version, forKey: .version)
        try container.encodeIfPresent(branch, forKey: .branch)
        try container.encodeIfPresent(releaseDate, forKey: .releaseDate)
        try container.encodeIfPresent(fileName, forKey: .fileName)
        try container.encodeIfPresent(url, forKey: .url)
        try container.encodeIfPresent(installed, forKey: .installed)
        try container.encodeIfPresent(installedOn, forKey: .installedOn)
        try container.encodeIfPresent(installable, forKey: .installable)
        try container.encodeIfPresent(latest, forKey: .latest)
        try container.encodeIfPresent(changes, forKey: .changes)
        try container.encodeIfPresent(hash, forKey: .hash)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension UpdateResource: Identifiable {}
