//
// Quality.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct Quality: Sendable, Codable, ParameterConvertible, Hashable {

    public var id: Int?
    public var name: String?
    public var source: QualitySource?
    public var resolution: Int?
    public var modifier: Modifier?

    public init(id: Int? = nil, name: String? = nil, source: QualitySource? = nil, resolution: Int? = nil, modifier: Modifier? = nil) {
        self.id = id
        self.name = name
        self.source = source
        self.resolution = resolution
        self.modifier = modifier
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case source
        case resolution
        case modifier
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(source, forKey: .source)
        try container.encodeIfPresent(resolution, forKey: .resolution)
        try container.encodeIfPresent(modifier, forKey: .modifier)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension Quality: Identifiable {}
