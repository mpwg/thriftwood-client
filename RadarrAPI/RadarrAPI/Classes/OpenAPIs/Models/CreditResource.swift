//
// CreditResource.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct CreditResource: Sendable, Codable, ParameterConvertible, Hashable {

    public var id: Int?
    public var personName: String?
    public var creditTmdbId: String?
    public var personTmdbId: Int?
    public var movieMetadataId: Int?
    public var images: [MediaCover]?
    public var department: String?
    public var job: String?
    public var character: String?
    public var order: Int?
    public var type: CreditType?

    public init(id: Int? = nil, personName: String? = nil, creditTmdbId: String? = nil, personTmdbId: Int? = nil, movieMetadataId: Int? = nil, images: [MediaCover]? = nil, department: String? = nil, job: String? = nil, character: String? = nil, order: Int? = nil, type: CreditType? = nil) {
        self.id = id
        self.personName = personName
        self.creditTmdbId = creditTmdbId
        self.personTmdbId = personTmdbId
        self.movieMetadataId = movieMetadataId
        self.images = images
        self.department = department
        self.job = job
        self.character = character
        self.order = order
        self.type = type
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case personName
        case creditTmdbId
        case personTmdbId
        case movieMetadataId
        case images
        case department
        case job
        case character
        case order
        case type
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(personName, forKey: .personName)
        try container.encodeIfPresent(creditTmdbId, forKey: .creditTmdbId)
        try container.encodeIfPresent(personTmdbId, forKey: .personTmdbId)
        try container.encodeIfPresent(movieMetadataId, forKey: .movieMetadataId)
        try container.encodeIfPresent(images, forKey: .images)
        try container.encodeIfPresent(department, forKey: .department)
        try container.encodeIfPresent(job, forKey: .job)
        try container.encodeIfPresent(character, forKey: .character)
        try container.encodeIfPresent(order, forKey: .order)
        try container.encodeIfPresent(type, forKey: .type)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension CreditResource: Identifiable {}
