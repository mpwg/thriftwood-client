//
// TagDetailsResource.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct TagDetailsResource: Sendable, Codable, ParameterConvertible, Hashable {

    public var id: Int?
    public var label: String?
    public var delayProfileIds: [Int]?
    public var importListIds: [Int]?
    public var notificationIds: [Int]?
    public var releaseProfileIds: [Int]?
    public var indexerIds: [Int]?
    public var downloadClientIds: [Int]?
    public var autoTagIds: [Int]?
    public var movieIds: [Int]?

    public init(id: Int? = nil, label: String? = nil, delayProfileIds: [Int]? = nil, importListIds: [Int]? = nil, notificationIds: [Int]? = nil, releaseProfileIds: [Int]? = nil, indexerIds: [Int]? = nil, downloadClientIds: [Int]? = nil, autoTagIds: [Int]? = nil, movieIds: [Int]? = nil) {
        self.id = id
        self.label = label
        self.delayProfileIds = delayProfileIds
        self.importListIds = importListIds
        self.notificationIds = notificationIds
        self.releaseProfileIds = releaseProfileIds
        self.indexerIds = indexerIds
        self.downloadClientIds = downloadClientIds
        self.autoTagIds = autoTagIds
        self.movieIds = movieIds
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case label
        case delayProfileIds
        case importListIds
        case notificationIds
        case releaseProfileIds
        case indexerIds
        case downloadClientIds
        case autoTagIds
        case movieIds
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(label, forKey: .label)
        try container.encodeIfPresent(delayProfileIds, forKey: .delayProfileIds)
        try container.encodeIfPresent(importListIds, forKey: .importListIds)
        try container.encodeIfPresent(notificationIds, forKey: .notificationIds)
        try container.encodeIfPresent(releaseProfileIds, forKey: .releaseProfileIds)
        try container.encodeIfPresent(indexerIds, forKey: .indexerIds)
        try container.encodeIfPresent(downloadClientIds, forKey: .downloadClientIds)
        try container.encodeIfPresent(autoTagIds, forKey: .autoTagIds)
        try container.encodeIfPresent(movieIds, forKey: .movieIds)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension TagDetailsResource: Identifiable {}
