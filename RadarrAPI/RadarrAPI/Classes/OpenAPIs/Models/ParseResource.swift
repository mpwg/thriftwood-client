//
// ParseResource.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct ParseResource: Sendable, Codable, ParameterConvertible, Hashable {

    public var id: Int?
    public var title: String?
    public var parsedMovieInfo: ParsedMovieInfo?
    public var movie: MovieResource?
    public var languages: [Language]?
    public var customFormats: [CustomFormatResource]?
    public var customFormatScore: Int?

    public init(id: Int? = nil, title: String? = nil, parsedMovieInfo: ParsedMovieInfo? = nil, movie: MovieResource? = nil, languages: [Language]? = nil, customFormats: [CustomFormatResource]? = nil, customFormatScore: Int? = nil) {
        self.id = id
        self.title = title
        self.parsedMovieInfo = parsedMovieInfo
        self.movie = movie
        self.languages = languages
        self.customFormats = customFormats
        self.customFormatScore = customFormatScore
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case title
        case parsedMovieInfo
        case movie
        case languages
        case customFormats
        case customFormatScore
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(parsedMovieInfo, forKey: .parsedMovieInfo)
        try container.encodeIfPresent(movie, forKey: .movie)
        try container.encodeIfPresent(languages, forKey: .languages)
        try container.encodeIfPresent(customFormats, forKey: .customFormats)
        try container.encodeIfPresent(customFormatScore, forKey: .customFormatScore)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ParseResource: Identifiable {}
