//
// MovieFileListResource.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct MovieFileListResource: Sendable, Codable, ParameterConvertible, Hashable {

    public var movieFileIds: [Int]?
    public var languages: [Language]?
    public var quality: QualityModel?
    public var edition: String?
    public var releaseGroup: String?
    public var sceneName: String?
    public var indexerFlags: Int?

    public init(movieFileIds: [Int]? = nil, languages: [Language]? = nil, quality: QualityModel? = nil, edition: String? = nil, releaseGroup: String? = nil, sceneName: String? = nil, indexerFlags: Int? = nil) {
        self.movieFileIds = movieFileIds
        self.languages = languages
        self.quality = quality
        self.edition = edition
        self.releaseGroup = releaseGroup
        self.sceneName = sceneName
        self.indexerFlags = indexerFlags
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case movieFileIds
        case languages
        case quality
        case edition
        case releaseGroup
        case sceneName
        case indexerFlags
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(movieFileIds, forKey: .movieFileIds)
        try container.encodeIfPresent(languages, forKey: .languages)
        try container.encodeIfPresent(quality, forKey: .quality)
        try container.encodeIfPresent(edition, forKey: .edition)
        try container.encodeIfPresent(releaseGroup, forKey: .releaseGroup)
        try container.encodeIfPresent(sceneName, forKey: .sceneName)
        try container.encodeIfPresent(indexerFlags, forKey: .indexerFlags)
    }
}

