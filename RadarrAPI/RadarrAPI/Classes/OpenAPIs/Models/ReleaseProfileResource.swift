//
// ReleaseProfileResource.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct ReleaseProfileResource: Sendable, Codable, ParameterConvertible, Hashable {

    public static let tagsRule = ArrayRule(minItems: nil, maxItems: nil, uniqueItems: true)
    public var id: Int?
    public var name: String?
    public var enabled: Bool?
    public var _required: JSONValue?
    public var ignored: JSONValue?
    public var indexerId: Int?
    public var tags: Set<Int>?

    public init(id: Int? = nil, name: String? = nil, enabled: Bool? = nil, _required: JSONValue? = nil, ignored: JSONValue? = nil, indexerId: Int? = nil, tags: Set<Int>? = nil) {
        self.id = id
        self.name = name
        self.enabled = enabled
        self._required = _required
        self.ignored = ignored
        self.indexerId = indexerId
        self.tags = tags
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
        case enabled
        case _required = "required"
        case ignored
        case indexerId
        case tags
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(enabled, forKey: .enabled)
        try container.encodeIfPresent(_required, forKey: ._required)
        try container.encodeIfPresent(ignored, forKey: .ignored)
        try container.encodeIfPresent(indexerId, forKey: .indexerId)
        try container.encodeIfPresent(tags, forKey: .tags)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension ReleaseProfileResource: Identifiable {}
