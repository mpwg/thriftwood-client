//
// UiConfigResource.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

public struct UiConfigResource: Sendable, Codable, ParameterConvertible, Hashable {

    public var id: Int?
    public var firstDayOfWeek: Int?
    public var calendarWeekColumnHeader: String?
    public var movieRuntimeFormat: MovieRuntimeFormatType?
    public var shortDateFormat: String?
    public var longDateFormat: String?
    public var timeFormat: String?
    public var showRelativeDates: Bool?
    public var enableColorImpairedMode: Bool?
    public var movieInfoLanguage: Int?
    public var uiLanguage: Int?
    public var theme: String?

    public init(id: Int? = nil, firstDayOfWeek: Int? = nil, calendarWeekColumnHeader: String? = nil, movieRuntimeFormat: MovieRuntimeFormatType? = nil, shortDateFormat: String? = nil, longDateFormat: String? = nil, timeFormat: String? = nil, showRelativeDates: Bool? = nil, enableColorImpairedMode: Bool? = nil, movieInfoLanguage: Int? = nil, uiLanguage: Int? = nil, theme: String? = nil) {
        self.id = id
        self.firstDayOfWeek = firstDayOfWeek
        self.calendarWeekColumnHeader = calendarWeekColumnHeader
        self.movieRuntimeFormat = movieRuntimeFormat
        self.shortDateFormat = shortDateFormat
        self.longDateFormat = longDateFormat
        self.timeFormat = timeFormat
        self.showRelativeDates = showRelativeDates
        self.enableColorImpairedMode = enableColorImpairedMode
        self.movieInfoLanguage = movieInfoLanguage
        self.uiLanguage = uiLanguage
        self.theme = theme
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case firstDayOfWeek
        case calendarWeekColumnHeader
        case movieRuntimeFormat
        case shortDateFormat
        case longDateFormat
        case timeFormat
        case showRelativeDates
        case enableColorImpairedMode
        case movieInfoLanguage
        case uiLanguage
        case theme
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(firstDayOfWeek, forKey: .firstDayOfWeek)
        try container.encodeIfPresent(calendarWeekColumnHeader, forKey: .calendarWeekColumnHeader)
        try container.encodeIfPresent(movieRuntimeFormat, forKey: .movieRuntimeFormat)
        try container.encodeIfPresent(shortDateFormat, forKey: .shortDateFormat)
        try container.encodeIfPresent(longDateFormat, forKey: .longDateFormat)
        try container.encodeIfPresent(timeFormat, forKey: .timeFormat)
        try container.encodeIfPresent(showRelativeDates, forKey: .showRelativeDates)
        try container.encodeIfPresent(enableColorImpairedMode, forKey: .enableColorImpairedMode)
        try container.encodeIfPresent(movieInfoLanguage, forKey: .movieInfoLanguage)
        try container.encodeIfPresent(uiLanguage, forKey: .uiLanguage)
        try container.encodeIfPresent(theme, forKey: .theme)
    }
}


@available(iOS 13, tvOS 13, watchOS 6, macOS 10.15, *)
extension UiConfigResource: Identifiable {}
